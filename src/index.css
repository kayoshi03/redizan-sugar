/* Variables*/

:root {
    --red-color: #8F111C;
    --red-hover-color: rgb(208, 18, 18);
    --white-color: #F4FAF6;
    --black-color: #1F2122;
    --width-container: 1440px;
}

/* Reset and base styles  */
* {
    padding: 0;
    margin: 0;
    border: none;
    font-family: "Jost", sans-serif;
}
body {
    background-color: var(--black-color);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Links */

a, a:link, a:visited  {
    text-decoration: none;
}

a:hover  {
    text-decoration: none;
}

/* Common */

aside, nav, footer, header, section, main {
    display: block;
}

h1, h2, h3, h4, h5, h6, p {
    font-size: inherit;
    font-weight: inherit;
}

ul, ul li {
    list-style: none;
}

img {
    vertical-align: top;
}

img, svg {
    max-width: 100%;
    height: auto;
}

address {
    font-style: normal;
}

/* Form */

input, textarea, button, select {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: transparent;
}

input::-ms-clear {
    display: none;
}

button, input[type="submit"] {
    display: inline-block;
    box-shadow: none;
    background-color: transparent;
    background: none;
    cursor: pointer;
}

input:focus, input:active,
button:focus, button:active {
    outline: none;
}

button::-moz-focus-inner {
    padding: 0;
    border: 0;
}

label {
    cursor: pointer;
}

legend {
    display: block;
}

/**/

#root {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100vh;
}

.container {
    max-width: var(--width-container);
    width: 100%;
}

svg {
    path {
        width: 20px;
        height: 20px;
        fill: var(--white-color);
    }
}

button, .btn {
    background-color: var(--red-color);
    border-radius: 4px;
    padding: 8px 16px;
    font-size: 16px;
    color: var(--white-color);
}

.red {
    color: var(--red-color) !important;
}

.title {
    color: var(--white-color);
    font-size: 48px;
    text-align: center;
    font-weight: 900;
}

.ymaps-2-1-79-ground-pane {
    filter: grayscale(1) invert(1) !important;
}

